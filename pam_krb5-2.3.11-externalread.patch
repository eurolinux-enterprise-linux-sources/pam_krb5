diff --git a/src/auth.c b/src/auth.c
index 6d2f4d9..a1498d4 100644
--- a/src/auth.c
+++ b/src/auth.c
@@ -226,6 +227,7 @@ pam_sm_authenticate(pam_handle_t *pamh, int flags,
 				      _pam_krb5_always_fail_prompter,
 				      &stash->v5expired,
 				      &stash->v5result);
+		stash->v5external = 0;
 		stash->v5attempted = 1;
 		if (options->debug) {
 			debug("got result %d (%s)", stash->v5result,
@@ -276,6 +278,7 @@ pam_sm_authenticate(pam_handle_t *pamh, int flags,
 					      &stash->v5expired,
 					      &stash->v5result);
 			use_third_pass = 0;
+			stash->v5external = 0;
 			stash->v5attempted = 1;
 			if (options->debug) {
 				debug("got result %d (%s)", stash->v5result,
@@ -370,6 +373,7 @@ pam_sm_authenticate(pam_handle_t *pamh, int flags,
 					      &stash->v5expired,
 					      &stash->v5result);
 			use_third_pass = 0;
+			stash->v5external = 0;
 			stash->v5attempted = 1;
 			if (options->debug) {
 				debug("got result %d (%s)", stash->v5result,
@@ -431,6 +435,7 @@ pam_sm_authenticate(pam_handle_t *pamh, int flags,
 				      _pam_krb5_normal_prompter,
 				      &stash->v5expired,
 				      &stash->v5result);
+		stash->v5external = 0;
 		stash->v5attempted = 1;
 		if (options->debug) {
 			debug("got result %d (%s)", stash->v5result,
diff --git a/src/stash.c b/src/stash.c
index a05e087..5dbc02f 100644
--- a/src/stash.c
+++ b/src/stash.c
@@ -184,9 +184,9 @@ _pam_krb5_stash_shm_read_v5(pam_handle_t *pamh, struct _pam_krb5_stash *stash,
 		return;
 	}
 	blob_creds = blob;
-	blob_creds += sizeof(int) * 3;
+	blob_creds += sizeof(int) * 4;
 	blob_creds_size = ((int*)blob)[0];
-	if (blob_creds_size + sizeof(int) * 3 > blob_size) {
+	if (blob_creds_size + sizeof(int) * 4 > blob_size) {
 		warn("saved creds too small: %d bytes, need %d bytes",
 		     (int) blob_size,
 		     (int) (blob_creds_size + sizeof(int) * 3));
@@ -251,6 +251,7 @@ _pam_krb5_stash_shm_read_v5(pam_handle_t *pamh, struct _pam_krb5_stash *stash,
 		/* Read other variables. */
 		stash->v5attempted = ((int*)blob)[1];
 		stash->v5result = ((int*)blob)[2];
+		stash->v5external = ((int*)blob)[3];
 		if (options->debug) {
 			debug("recovered v5 credentials from shared memory "
 			      "segment %d", key);
@@ -341,7 +342,7 @@ _pam_krb5_stash_shm_write_v5(pam_handle_t *pamh, struct _pam_krb5_stash *stash,
 	}
 
 	/* Read the entire file. */
-	key = _pam_krb5_shm_new_from_file(pamh, sizeof(int) * 3,
+	key = _pam_krb5_shm_new_from_file(pamh, sizeof(int) * 4,
 					  variable + 5, &blob_size, &blob,
 					  options->debug);
 	if ((key != -1) && (blob != NULL)) {
@@ -349,6 +350,7 @@ _pam_krb5_stash_shm_write_v5(pam_handle_t *pamh, struct _pam_krb5_stash *stash,
 		intblob[0] = blob_size;
 		intblob[1] = stash->v5attempted;
 		intblob[2] = stash->v5result;
+		intblob[3] = stash->v5external;
 	}
 	if (blob != NULL) {
 		blob = _pam_krb5_shm_detach(blob);
@@ -693,6 +695,7 @@ _pam_krb5_stash_external_read(pam_handle_t *pamh, struct _pam_krb5_stash *stash,
 							unparsed = NULL;
 							stash->v5attempted = 1;
 							stash->v5result = 0;
+							stash->v5external = 1;
 							break;
 						}
 						if (options->debug) {
@@ -801,6 +804,8 @@ _pam_krb5_stash_get(pam_handle_t *pamh, const char *user,
 	stash->v5ctx = NULL;
 	stash->v5attempted = 0;
 	stash->v5result = KRB5KRB_ERR_GENERIC;
+	stash->v5expired = 0;
+	stash->v5external = 0;
 	stash->v5ccnames = NULL;
 	stash->v5setenv = 0;
 	stash->v5shm = -1;
@@ -818,7 +823,9 @@ _pam_krb5_stash_get(pam_handle_t *pamh, const char *user,
 	if (options->use_shmem) {
 		_pam_krb5_stash_shm_read(pamh, key, stash, options);
 	}
-	if (options->external && (stash->v5attempted == 0)) {
+	if (options->external &&
+	    ((stash->v5attempted == 0) ||
+	     ((stash->v5external == 1) && (stash->v5result == 0)))) {
 		_pam_krb5_stash_external_read(pamh, stash, user, info, options);
 		if (stash->v5attempted && (stash->v5result == 0)) {
 			if ((_pam_krb5_init_ctx(&ctx, 0, NULL) == 0) &&
diff --git a/src/stash.h b/src/stash.h
index 1330512..1887819 100644
--- a/src/stash.h
+++ b/src/stash.h
@@ -43,7 +43,7 @@ struct _pam_krb5_ccname_list {
 struct _pam_krb5_stash {
 	char *key;
 	krb5_context v5ctx;
-	int v5attempted, v5result, v5expired;
+	int v5attempted, v5result, v5expired, v5external;
 	struct _pam_krb5_ccname_list *v5ccnames;
 	krb5_creds v5creds;
 	int v5setenv;
