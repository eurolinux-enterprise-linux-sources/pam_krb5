diff --git a/src/session.c b/src/session.c
index 0c267fa..21b9bd2 100644
--- a/src/session.c
+++ b/src/session.c
@@ -225,35 +236,41 @@ pam_sm_open_session(pam_handle_t *pamh, int flags,
 		v5_destroy(ctx, stash, options);
 	}
 
-	/* Create the user's credential cache. */
-	if (options->debug) {
+	/* Create the user's credential cache, but only if we didn't pick them
+	 * up from our calling process. */
+	if (!stash->v5external) {
+		if (options->debug) {
 #ifdef HAVE_LONG_LONG
-		debug("creating v5 ccache for '%s', uid=%llu, gid=%llu", user,
-		      options->user_check ?
-		      (unsigned long long) userinfo->uid :
-		      (unsigned long long) getuid(),
-		      options->user_check ?
-		      (unsigned long long) userinfo->gid :
-		      (unsigned long long) getgid());
+			debug("creating v5 ccache for '%s', uid=%llu, gid=%llu",
+			      user,
+			      options->user_check ?
+			      (unsigned long long) userinfo->uid :
+			      (unsigned long long) getuid(),
+			      options->user_check ?
+			      (unsigned long long) userinfo->gid :
+			      (unsigned long long) getgid());
 #else
-		debug("creating v5 ccache for '%s', uid=%lu, gid=%lu",
-		      user,
-		      options->user_check ?
-		      (unsigned long) userinfo->uid :
-		      (unsigned long) getuid(),
-		      options->user_check ?
-		      (unsigned long) userinfo->gid :
-		      (unsigned long) getgid());
+			debug("creating v5 ccache for '%s', uid=%lu, gid=%lu",
+			      user,
+			      options->user_check ?
+			      (unsigned long) userinfo->uid :
+			      (unsigned long) getuid(),
+			      options->user_check ?
+			      (unsigned long) userinfo->gid :
+			      (unsigned long) getgid());
 #endif
-	}
-	i = v5_save_for_user(ctx, stash, user, userinfo, options, &ccname);
-	if ((i == PAM_SUCCESS) && (strlen(ccname) > 0)) {
-		if (options->debug) {
-			debug("created v5 ccache '%s' for '%s'", ccname, user);
 		}
-		sprintf(envstr, "KRB5CCNAME=%s", ccname);
-		pam_putenv(pamh, envstr);
-		stash->v5setenv = 1;
+		i = v5_save_for_user(ctx, stash, user, userinfo,
+				     options, &ccname);
+		if ((i == PAM_SUCCESS) && (strlen(ccname) > 0)) {
+			if (options->debug) {
+				debug("created v5 ccache '%s' for '%s'",
+				      ccname, user);
+			}
+			sprintf(envstr, "KRB5CCNAME=%s", ccname);
+			pam_putenv(pamh, envstr);
+			stash->v5setenv = 1;
+		}
 	}
 
 #ifdef USE_KRB4
@@ -432,14 +432,16 @@ _pam_krb5_close_session(pam_handle_t *pamh, int flags,
 		tokens_release(stash, options);
 	}
 
-	if (stash->v5ccnames != NULL) {
-		v5_destroy(ctx, stash, options);
-		if (stash->v5setenv) {
-			pam_putenv(pamh, "KRB5CCNAME");
-			stash->v5setenv = 0;
-		}
-		if (options->debug) {
-			debug("destroyed v5 ccache for '%s'", user);
+	if (!stash->v5external) {
+		if (stash->v5ccnames != NULL) {
+			v5_destroy(ctx, stash, options);
+			if (stash->v5setenv) {
+				pam_putenv(pamh, "KRB5CCNAME");
+				stash->v5setenv = 0;
+			}
+			if (options->debug) {
+				debug("destroyed v5 ccache for '%s'", user);
+			}
 		}
 	}
 
